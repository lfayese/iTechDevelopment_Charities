function Copy-CustomWimToWorkspace {
    [CmdletBinding()]
    param(
        [Parameter(Mandatory = $true)][string]$WimPath,
        [Parameter(Mandatory = $true)][string]$WorkspacePath,
        [switch]$UseRobocopy
    )
    
    # Robocopy exit codes: 0=No files copied, 1=Files copied successfully, 
    # 2-7=Some files copied with varying levels of mirroring/file mismatches, 8+=At least one operation failed
    
    $destination = Join-Path $WorkspacePath (Split-Path $WimPath -Leaf)
    
    if ((Get-Command "robocopy.exe" -ErrorAction SilentlyContinue) -and $UseRobocopy) {
        # Use robocopy for faster file transfer with multi-threading based on available cores
        $sourceDir = Split-Path $WimPath -Parent
        $sourceFile = Split-Path $WimPath -Leaf
        $threadCount = [Math]::Min([Environment]::ProcessorCount, 16)
        
        # Execute robocopy with optimal parameters for large files
        $robocopyArgs = "`"$sourceDir`" `"$WorkspacePath`" `"$sourceFile`" /J /MT:$threadCount"
        $result = Start-Process "robocopy.exe" -ArgumentList $robocopyArgs -NoNewWindow -Wait -PassThru
        
        if ($result.ExitCode -gt 7) { throw "Robocopy failed with exit code $($result.ExitCode)" }
    }
    else {
        # Fall back to Copy-Item if robocopy is unavailable
        Copy-Item -Path $WimPath -Destination $destination -Force
    }
}